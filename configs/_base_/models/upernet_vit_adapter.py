norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='ViTAdapter',
        pretrain_size=224,
        num_heads=3,
        conv_inplane=64,
        num_points=4,
        deform_num_heads=6,
        init_values=0.,
        interaction_indexes=[[0, 2], [3, 5], [6, 8], [9, 11]],
        with_cffn=True,
        cffn_ratio=0.25,
        cffn_drop_rate=0.,
        deform_ratio=1.0,
        add_vit_feature=True,
        use_extra_extractor=True,
        with_cp=False,
        img_size=224,
        patch_size=16,
        in_channels=3,
        num_classes=150,
        embed_dims=192,
        depth=12,
        mlp_ratio=4,
        qkv_bias=True,
        drop_rate=0.,
        attn_drop_rate=0.,
        drop_path_rate=0.1,
        num_fcs=2,
        layer_scale=True,
        patch_norm=False,
        norm_cfg=dict(type='LN'),
        act_cfg=dict(type='GELU'),
        window_attn=[False] * 12,
        window_size=[None] * 12,
        convert_weights=True),
    decode_head=dict(
        type='UPerHead',
        num_classes=150,
        in_channels=[192, 192, 192, 192],
        in_index=[0, 1, 2, 3],
        pool_scales=(1, 2, 3, 6),
        channels=512,
        dropout_ratio=0.1,
        norm_cfg=norm_cfg,
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        num_classes=150,
        in_channels=192,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=norm_cfg,
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
